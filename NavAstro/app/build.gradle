/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    id 'application'
    id 'java'
}

version = '0.1.0'
archivesBaseName = 'NavAstroAppBigJar'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.8.2")
    testImplementation group: 'org.junit.platform', name: 'junit-platform-suite-api', version: '1.9.0'

    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'
    runtimeOnly group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.11'
}

application {
    mainClass = 'sfa.voile.nav.astro.NavAstro.App'
}

jar {
    manifest {
        attributes  'Main-Class': 'sfa.voile.nav.astro.NavAstro.App'
    }
}

task fatJar(type: Jar) {
  manifest.from jar.manifest
  classifier = 'all'
  from {
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  } 
  {
    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
  }
  with jar
}

tasks.register('uberJar', Jar) {
    manifest.from jar.manifest
    archiveClassifier = 'uber'
    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}

// pour faire marcher stdin
run {
    standardInput = System.in
}

tasks.named('test') {
    useJUnitPlatform()
}
